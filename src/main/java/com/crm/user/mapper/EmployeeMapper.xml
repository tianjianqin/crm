<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crm.user.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.crm.user.domain.Employee">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="CHAR" property="username"/>
        <result column="password" jdbcType="CHAR" property="password"/>
        <result column="nickname" jdbcType="CHAR" property="nickname"/>
        <result column="realname" jdbcType="CHAR" property="realname"/>
        <result column="jobInfoId" jdbcType="INTEGER" property="jobinfoid"/>
        <result column="departmentId" jdbcType="INTEGER" property="departmentid"/>
        <result column="phoneNo" jdbcType="CHAR" property="phoneno"/>
        <result column="officeTel" jdbcType="CHAR" property="officetel"/>
        <result column="workStatu" jdbcType="CHAR" property="workstatu"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, username, password, nickname, realname, jobInfoId, departmentId, phoneNo, officeTel,
        workStatu
    </sql>
    <select id="selectByExample" parameterType="com.crm.user.domain.EmployeeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="queryList" resultType="com.crm.user.domain.Employee">
        SELECT DISTINCT
        e.id as "id",e.username as "username",e.password as "password",e.nickname as "nickname", e.realname as "realname",
        e.jobInfoId as "jobInfoId",j.job as "job",d.dname as "dname",e.departmentId as "departmentId", e.phoneNo as "phoneNo",
        e.officeTel as "officeTel",e.workStatu as "workStatu"
        FROM employee e
        LEFT JOIN department d on e.departmentId=d.id
        LEFT JOIN jobinfo j on e.jobInfoId=j.id
        <where>
            <if test="jobinfoid != null">
                and `jobInfoId` = #{jobinfoid}
            </if>
            <if test="departmentid != null">
                and e.departmentId = #{departmentid}
            </if>
            <if test="realname != null and realname.trim() != ''">
                and realname like CONCAT('%', #{realname}, '%')
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(DISTINCT e.id) from employee e
            LEFT JOIN department d on e.departmentId=d.id
            LEFT JOIN jobinfo j on e.jobInfoId=j.id
        <where>
            <if test="jobinfoid != null">
                and `jobInfoId` = #{jobinfoid}
            </if>
            <if test="departmentid != null">
                and e.departmentId = #{departmentid}
            </if>
            <if test="realname != null and realname.trim() != ''">
                and realname like CONCAT('%', #{realname}, '%')
            </if>
        </where>
    </select>

    <update id="update" parameterType="com.crm.user.domain.Employee">
        update employee
        <set>
            <if test="username != null">
                username = #{username,jdbcType=CHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=CHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=CHAR},
            </if>
            <if test="realname != null">
                realname = #{realname,jdbcType=CHAR},
            </if>
            <if test="jobinfoid != null">
                jobInfoId = #{jobinfoid,jdbcType=INTEGER},
            </if>
            <if test="departmentid != null">
                departmentId = #{departmentid,jdbcType=INTEGER},
            </if>
            <if test="phoneno != null">
                phoneNo = #{phoneno,jdbcType=CHAR},
            </if>
            <if test="officetel != null">
                officeTel = #{officetel,jdbcType=CHAR},
            </if>
            <if test="workstatu != null">
                workStatu = #{workstatu,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id}
    </update>

    <insert id="save" parameterType="com.crm.user.domain.Employee">
        insert into employee
        (id, username, password,
         nickname, realname, jobInfoId,
         departmentId, phoneNo, officeTel,
         workStatu)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=CHAR}, #{password,jdbcType=CHAR},
                #{nickname,jdbcType=CHAR}, #{realname,jdbcType=CHAR}, #{jobinfoid,jdbcType=INTEGER},
                #{departmentid,jdbcType=INTEGER}, #{phoneno,jdbcType=CHAR}, #{officetel,jdbcType=CHAR},
                #{workstatu,jdbcType=CHAR})
    </insert>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from employee
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.crm.user.domain.EmployeeExample">
        delete from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.crm.user.domain.Employee">
        insert into employee (id, username, password,
        nickname, realname, jobInfoId,
        departmentId, phoneNo, officeTel,
        workStatu)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=CHAR}, #{password,jdbcType=CHAR},
        #{nickname,jdbcType=CHAR}, #{realname,jdbcType=CHAR}, #{jobinfoid,jdbcType=INTEGER},
        #{departmentid,jdbcType=INTEGER}, #{phoneno,jdbcType=CHAR}, #{officetel,jdbcType=CHAR},
        #{workstatu,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.crm.user.domain.Employee">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="realname != null">
                realname,
            </if>
            <if test="jobinfoid != null">
                jobInfoId,
            </if>
            <if test="departmentid != null">
                departmentId,
            </if>
            <if test="phoneno != null">
                phoneNo,
            </if>
            <if test="officetel != null">
                officeTel,
            </if>
            <if test="workstatu != null">
                workStatu,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=CHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=CHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=CHAR},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=CHAR},
            </if>
            <if test="jobinfoid != null">
                #{jobinfoid,jdbcType=INTEGER},
            </if>
            <if test="departmentid != null">
                #{departmentid,jdbcType=INTEGER},
            </if>
            <if test="phoneno != null">
                #{phoneno,jdbcType=CHAR},
            </if>
            <if test="officetel != null">
                #{officetel,jdbcType=CHAR},
            </if>
            <if test="workstatu != null">
                #{workstatu,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.crm.user.domain.EmployeeExample" resultType="java.lang.Long">
        select count(*) from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update employee
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=CHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=CHAR},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=CHAR},
            </if>
            <if test="record.realname != null">
                realname = #{record.realname,jdbcType=CHAR},
            </if>
            <if test="record.jobinfoid != null">
                jobInfoId = #{record.jobinfoid,jdbcType=INTEGER},
            </if>
            <if test="record.departmentid != null">
                departmentId = #{record.departmentid,jdbcType=INTEGER},
            </if>
            <if test="record.phoneno != null">
                phoneNo = #{record.phoneno,jdbcType=CHAR},
            </if>
            <if test="record.officetel != null">
                officeTel = #{record.officetel,jdbcType=CHAR},
            </if>
            <if test="record.workstatu != null">
                workStatu = #{record.workstatu,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update employee
        set id = #{record.id,jdbcType=INTEGER},
        username = #{record.username,jdbcType=CHAR},
        password = #{record.password,jdbcType=CHAR},
        nickname = #{record.nickname,jdbcType=CHAR},
        realname = #{record.realname,jdbcType=CHAR},
        jobInfoId = #{record.jobinfoid,jdbcType=INTEGER},
        departmentId = #{record.departmentid,jdbcType=INTEGER},
        phoneNo = #{record.phoneno,jdbcType=CHAR},
        officeTel = #{record.officetel,jdbcType=CHAR},
        workStatu = #{record.workstatu,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.crm.user.domain.Employee">
        update employee
        <set>
            <if test="username != null">
                username = #{username,jdbcType=CHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=CHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=CHAR},
            </if>
            <if test="realname != null">
                realname = #{realname,jdbcType=CHAR},
            </if>
            <if test="jobinfoid != null">
                jobInfoId = #{jobinfoid,jdbcType=INTEGER},
            </if>
            <if test="departmentid != null">
                departmentId = #{departmentid,jdbcType=INTEGER},
            </if>
            <if test="phoneno != null">
                phoneNo = #{phoneno,jdbcType=CHAR},
            </if>
            <if test="officetel != null">
                officeTel = #{officetel,jdbcType=CHAR},
            </if>
            <if test="workstatu != null">
                workStatu = #{workstatu,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.crm.user.domain.Employee">
        update employee
        set username = #{username,jdbcType=CHAR},
        password = #{password,jdbcType=CHAR},
        nickname = #{nickname,jdbcType=CHAR},
        realname = #{realname,jdbcType=CHAR},
        jobInfoId = #{jobinfoid,jdbcType=INTEGER},
        departmentId = #{departmentid,jdbcType=INTEGER},
        phoneNo = #{phoneno,jdbcType=CHAR},
        officeTel = #{officetel,jdbcType=CHAR},
        workStatu = #{workstatu,jdbcType=CHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>